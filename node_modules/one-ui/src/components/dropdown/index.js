import React, { Component } from 'react';
import cx from 'classnames';
import clickOutside from '../../decorators/clickOutside';
import PropTypes from 'prop-types';

@clickOutside((component) => {
  component.setState({
    isActive: false
  });
})

export default class Dropdown extends Component {
  static defaultProps = {
    autoHide: false,
    labelClassName: undefined,
    label: undefined,
    pullRight: false,
    menuStyle: {},
    style: null,
    icon: true
  };

  static propTypes = {
    autoHide: PropTypes.bool,
    labelClassName: PropTypes.any,
    label: PropTypes.any,
    pullRight: PropTypes.bool,
    menuStyle: PropTypes.object,
    style: PropTypes.object,
    icon: PropTypes.bool
  };

  constructor(props) {
    super(props);

    this.state = {
      isActive: false
    };
  }

  toggle() {
    this.setState({
      isActive: !this.state.isActive
    });
  }

  componentWillReceiveProps(nextProps) {
    if (nextProps.autoHide) {
      this.setState({
        isActive: false
      });
    }
  }

  render() {
    const labelClassName = (() => {
      var obj = {};

      if (this.props.labelClassName) {
        obj[this.props.labelClassName] = true;
      }

      return obj;
    })();

    // 对齐方式（左 / 右）
    const pullRight = this.props.pullRight ? { 'dropdown-menu-right': this.props.pullRight } : null;

    return (
      <div className={cx('dropdown', this.props.className, {'open': this.state.isActive})} style={ this.props.style }>
        <div className={cx('btn dropdown-toggle', labelClassName, pullRight)} onClick={ this.toggle.bind(this) }>
          {
            this.props.icon ? <span className="caret icon">&#xe64b;</span> : null
          }
          { this.props.label }
        </div>
        {
          this.state.isActive ? (
            <div className={cx('dropdown-menu', pullRight)} style={ this.props.menuStyle }>
              { this.props.children }
            </div>
          ) : null
        }
      </div>
    )
  }
}
