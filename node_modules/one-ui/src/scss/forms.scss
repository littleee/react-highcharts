@import 'variables';
@import 'mixins';

/**
 * 表单元素。
 *
 * 示例：#TODO
 *
 */

form {
  font-size: 1.2rem;
}

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  margin: 3px 0 0;
  line-height: normal;
}

input[type="file"] {
  display: block;
}

.radio,
.checkbox {
  position: relative;
  display: block;
  margin-top: 10px;
  margin-bottom: 10px;
  font-size: 1.2rem;

  label {
    min-height: $line-height-computed;
    padding-left: 20px;
    margin-bottom: 0;
    font-weight: normal;
    cursor: pointer;
  }
}

.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  position: absolute;
  margin-left: -20px;
}

.radio + .radio,
.checkbox + .checkbox {
  margin-top: -5px; // Move up sibling radios or checkboxes for tighter spacing
}

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  position: relative;
  display: inline-block;
  padding-left: 20px;
  margin-bottom: 0;
  vertical-align: middle;
  font-weight: normal;
  cursor: pointer;
  font-size: 1.2rem;
}

.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-top: 0;
  margin-left: 10px; // space out consecutive inline controls
}

.align-right {
  label {
    padding-left: 0;
    padding-right: 20px;
  }

  input[type="radio"],
  input[type="checkbox"] {
    margin-left: 8px;
  }
}

// Apply same disabled cursor tweak as for inputs
// Some special care is needed because <label>s don't inherit their parent's `cursor`.
//
// Note: Neither radios nor checkboxes can be readonly.
input[type="radio"],
input[type="checkbox"] {
  &[disabled],
  &.disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}

// These classes are used directly on <label>s
.radio-inline,
.checkbox-inline {
  &.disabled,
  fieldset[disabled] & {
    cursor: $cursor-disabled;
  }
}

// These classes are used on elements with <label> descendants
.radio,
.checkbox {
  &.disabled,
  fieldset[disabled] & {
    label {
      cursor: $cursor-disabled;
    }
  }
}

.form-inline,
.form-horizontal {
  .form-label {
    margin-top: 3px;
    margin-bottom: 3px;
  }
}

.form-inline {
  .form-group {
    .form-label {
      margin-right: 10px;
    }

    + .form-group {
      margin-left: 15px;
    }
  }
}

.form-horizontal {
  .form-label {
    padding-right: 10px;
  }
}

.form-control {
  display: block;
  width: 100%;
  padding: $form-control-padding-y $form-control-padding-x;
  font-size: $form-font-size;
  line-height: $form-line-height;
  color: $form-control-color;
  background-color: $form-control-bg;
  background-image: none;
  background-clip: padding-box;
  border: 1px solid $form-control-border;
  box-sizing: border-box;
  outline: 0;
  border-radius: 0;

  &:focus {
    border-color: #458DF9;
  }

  &:disabled,
  &[readonly] {
    background-color: $form-control-bg-disabled;
  }

  &:disabled {
    cursor: $cursor-disabled;
  }

  &::placeholder {
    color: rgba(117, 117, 117, .5);
  }
}

.form-feedback {
  position: relative;

  > .form-control {
    padding-right: $form-control-padding-x * 3;
  }
}

.form-feedback-icon {
  position: absolute;
  display: flex;
  align-items: center;

  &,
  &.pull-right {
    top: 0px;
    right: 10px;
    bottom: 0px;
  }

  &.pull-left {
    left: 10px;
    right: auto;
    float: initial;
  }

  > .icon + .icon {
    margin-left: 10px;
  }
}

.form-group {
  margin-bottom: $form-control-group-margin;

  &.pure-g {
    align-items: center;
  }
}

.help-block {
  display: block; // account for any element using help-block
  margin-top: 5px;
  margin-bottom: 10px;
}


.form-inline {
  @media (min-width: 768px) {
    .form-group {
      display: inline-block;
      margin-bottom: 0;
      vertical-align: middle;
    }

    .form-control {
      display: inline-block;
      width: auto;
      vertical-align: middle;
    }

    .input-group {
      display: inline-table;
      vertical-align: middle;

      .input-group-addon,
      .input-group-btn,
      .form-control {
        width: auto;
      }
    }

    // Input groups need that 100% width though
    .input-group > .form-control {
      width: 100%;
    }

    .form-label {
      font-size: $form-font-size;
      vertical-align: middle;
    }

    // Remove default margin on radios/checkboxes that were used for stacking, and
    // then undo the floating of radios and checkboxes to match.
    .radio,
    .checkbox {
      display: inline-block;
      margin-top: 0;
      margin-bottom: 0;
      vertical-align: middle;

      label {
        padding-left: 0;
      }
    }

    .radio input[type="radio"],
    .checkbox input[type="checkbox"] {
      position: relative;
      margin-left: 0;
    }
  }
}


.has-info {
  @include form-control-validation($state-info-text, $state-info-text);
}

.has-danger {
  @include form-control-validation($state-danger-text, $state-danger-text);
}

.has-primary {
  @include form-control-validation($state-primary-text, $state-primary-text);
}

.has-success {
  @include form-control-validation($state-success-text, $state-success-text);
}

.input-xs {
  padding-top: 4px;
  padding-bottom: 5px;
}

