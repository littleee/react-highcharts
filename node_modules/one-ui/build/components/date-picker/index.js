'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

require('./index.css');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _slider = require('../slider');

var _slider2 = _interopRequireDefault(_slider);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ADAY = 24 * 3600 * 1000;

var DatePicker = (_temp = _class = function (_Component) {
  _inherits(DatePicker, _Component);

  function DatePicker(props) {
    _classCallCheck(this, DatePicker);

    var _this = _possibleConstructorReturn(this, (DatePicker.__proto__ || Object.getPrototypeOf(DatePicker)).call(this, props));

    _this.state = _this._stateFromDate((0, _moment2.default)(props.defaultValue).valueOf());
    _this._onForward = _this._onForward.bind(_this);
    _this._onBackward = _this._onBackward.bind(_this);
    _this._onChange = _this._onChange.bind(_this);
    return _this;
  }

  _createClass(DatePicker, [{
    key: '_isDateDisabled',
    value: function _isDateDisabled(date) {
      var cur = (0, _moment2.default)(date).startOf('d').valueOf();
      var min = (0, _moment2.default)(this.props.minDate).startOf('d').valueOf();
      var max = (0, _moment2.default)(this.props.maxDate).endOf('d').valueOf();
      return cur < min || cur > max;
    }
  }, {
    key: '_stateFromDate',
    value: function _stateFromDate(date, dontChangeValue) {
      var $currentDay = (0, _moment2.default)(date);
      var prevLastDay = (0, _moment2.default)(date).add(-1, 'month').endOf('month').valueOf(),
          nextFirstDay = (0, _moment2.default)(date).add(1, 'month').startOf('month').valueOf(),
          value = dontChangeValue ? this.state.value : date;

      return Object.assign({
        value: value
      }, {
        currentShow: date,
        year: $currentDay.year(),
        month: $currentDay.month(),
        date: (0, _moment2.default)(value).date(),
        hour: (0, _moment2.default)(value).hour(),
        minute: (0, _moment2.default)(value).minute(),
        matrix: this._generateMatrix(date),
        allowForward: nextFirstDay >= this.props.minDate && nextFirstDay <= this.props.maxDate,
        allowBackward: prevLastDay >= this.props.minDate && prevLastDay <= this.props.maxDate
      });
    }
  }, {
    key: '_generateMatrix',
    value: function _generateMatrix(date) {
      var matrixStart = (0, _moment2.default)(date).startOf('month').startOf('week').startOf('day').valueOf(),
          matrixEnd = (0, _moment2.default)(date).endOf('month').endOf('week').add(1, 'week').endOf('day').valueOf();

      return _lodash2.default.range(matrixStart, matrixEnd, ADAY).map(function (i) {
        var m = (0, _moment2.default)(i);
        return {
          value: m.valueOf(),
          date: m.date(),
          label: m.format('DD'),
          month: m.month()
        };
      }).reduce(function (i, acc, n) {
        if (n % 7) {
          i[i.length - 1].push(acc);
          return i;
        } else {
          i.push([acc]);
          return i;
        }
      }, []);
    }
  }, {
    key: '_onChange',
    value: function _onChange() {
      this.props.onChange(this.state.value);
    }
  }, {
    key: '_onForward',
    value: function _onForward(key) {
      this.setState(this._stateFromDate((0, _moment2.default)(this.state.currentShow).add(1, 'month').valueOf(), true));
    }
  }, {
    key: '_onBackward',
    value: function _onBackward(key) {
      this.setState(this._stateFromDate((0, _moment2.default)(this.state.currentShow).add(-1, 'month').valueOf(), true));
    }
  }, {
    key: '_selectDay',
    value: function _selectDay(date) {
      this.setState(this._stateFromDate((0, _moment2.default)(date).set('hour', this.state.hour).set('minute', this.state.minute).valueOf()), this._onChange);
    }
  }, {
    key: '_selectHour',
    value: function _selectHour(hour) {
      this.setState(this._stateFromDate((0, _moment2.default)(this.state.value).set('hour', hour).valueOf()), this._onChange);
    }
  }, {
    key: '_selectMinute',
    value: function _selectMinute(minute) {
      this.setState(this._stateFromDate((0, _moment2.default)(this.state.value).set('minute', minute).valueOf()), this._onChange);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react2.default.createElement(
        'div',
        { className: 'date-time-picker' },
        _react2.default.createElement(
          'div',
          { className: 'calendar d-inline-block' },
          _react2.default.createElement(
            'div',
            { className: 'calendar-header' },
            _react2.default.createElement(
              'i',
              { className: 'icon', onClick: this.state.allowBackward ? this._onBackward : null },
              '\uE68C'
            ),
            this.state.year,
            __('年'),
            ' ',
            this.state.month + 1,
            __('月'),
            _react2.default.createElement(
              'i',
              { className: 'icon', onClick: this.state.allowForward ? this._onForward : null },
              '\uE68D'
            )
          ),
          _react2.default.createElement(
            'table',
            { className: 'table calendar-body' },
            _react2.default.createElement(
              'thead',
              null,
              _react2.default.createElement(
                'tr',
                null,
                _react2.default.createElement(
                  'th',
                  null,
                  __('日')
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  __('一')
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  __('二')
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  __('三')
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  __('四')
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  __('五')
                ),
                _react2.default.createElement(
                  'th',
                  null,
                  __('六')
                )
              )
            ),
            _react2.default.createElement(
              'tbody',
              null,
              this.state.matrix.map(function (week, n) {
                return _react2.default.createElement(
                  'tr',
                  { key: n },
                  week.map(function (dayObj) {
                    if (this._isDateDisabled(dayObj.value) || dayObj.month !== this.state.month) {
                      return _react2.default.createElement(
                        'td',
                        { className: 'disabled', key: dayObj.value },
                        dayObj.label
                      );
                    } else {
                      return _react2.default.createElement(
                        'td',
                        {
                          key: dayObj.value,
                          onClick: this._selectDay.bind(this, dayObj.value),
                          className: (0, _classnames2.default)({
                            active: dayObj.date === this.state.date
                          })
                        },
                        dayObj.label
                      );
                    }
                  }, this)
                );
              }, this)
            )
          )
        ),
        this.props.withTime && _react2.default.createElement(
          'div',
          { className: 'time-picker' },
          _react2.default.createElement(
            'div',
            { className: 'time-text flex-row-1' },
            _react2.default.createElement(
              'span',
              { className: 'flex-item text-bold' },
              this.props.type === 'start' ? __('起始') : __('结束'),
              ' ',
              __('时间')
            ),
            _react2.default.createElement(
              'span',
              { className: 'flex-item' },
              __('请选择日期')
            ),
            _react2.default.createElement(
              'span',
              { className: 'flex-item' },
              (0, _moment2.default)(this.state.value).format('HH'),
              '\xA0:\xA0',
              (0, _moment2.default)(this.state.value).format('mm')
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'time-item clearfix' },
            _react2.default.createElement(
              'label',
              { className: 'time-item-label text-bold' },
              __('小时')
            ),
            _react2.default.createElement(
              'div',
              { className: 'time-item-slider' },
              _react2.default.createElement(_slider2.default, {
                ref: 'hour',
                value: this.state.hour,
                min: 0,
                tooltip: {
                  'data-tip': this.state.hour
                },
                minValue: (0, _moment2.default)(this.props.minDate).isSame((0, _moment2.default)(this.state.value), 'day') ? (0, _moment2.default)(this.props.minDate).hour() : 0,
                max: 23,
                maxValue: (0, _moment2.default)(this.props.maxDate).isSame((0, _moment2.default)(this.state.value), 'day') ? (0, _moment2.default)(this.props.maxDate).hour() : 23,
                onChange: function onChange(v) {
                  return _this2._selectHour(v);
                }
              })
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'time-item clearfix' },
            _react2.default.createElement(
              'label',
              { className: 'time-item-label text-bold' },
              __('分钟')
            ),
            _react2.default.createElement(
              'div',
              { className: 'time-item-slider' },
              _react2.default.createElement(_slider2.default, {
                ref: 'minute',
                tooltip: {
                  'data-tip': this.state.minute
                },
                value: this.state.minute,
                min: 0,
                minValue: (0, _moment2.default)(this.props.minDate).isSame((0, _moment2.default)(this.state.value), 'day') ? (0, _moment2.default)(this.props.minDate).minute() : 0,
                max: 59,
                maxValue: (0, _moment2.default)(this.props.maxDate).isSame((0, _moment2.default)(this.state.value), 'day') ? (0, _moment2.default)(this.props.maxDate).minute() : 59,
                onChange: function onChange(v) {
                  return _this2._selectMinute(v);
                }
              })
            )
          )
        )
      );
    }
  }]);

  return DatePicker;
}(_react.Component), _class.defaultProps = {
  onChange: function onChange() {},
  defaultValue: Date.now(),
  minDate: Date.now() - 365 * 24 * 60 * 60 * 1000,
  maxDate: Date.now() + 365 * 24 * 60 * 60 * 1000,
  withTime: true,
  type: ''
}, _temp);
exports.default = DatePicker;
module.exports = exports['default'];