'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp, _class2, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TabNav = (_temp = _class = function (_Component) {
  _inherits(TabNav, _Component);

  function TabNav(props, context) {
    _classCallCheck(this, TabNav);

    var _this = _possibleConstructorReturn(this, (TabNav.__proto__ || Object.getPrototypeOf(TabNav)).call(this, props, context));

    _this.state = {
      active: props.active
    };
    return _this;
  }

  _createClass(TabNav, [{
    key: 'setActive',
    value: function setActive(index) {
      var len = this.props.children.length - 1;

      this.setState({
        active: index < 0 ? 0 : index > len ? len : index
      });

      if (this.props.setActive) {
        this.props.setActive(index);
      }
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      this.setState({
        active: nextProps.active
      });
    }
  }, {
    key: 'handleSwitchNavTab',
    value: function handleSwitchNavTab(panel, index) {
      this.setActive(index);

      panel.props.handleClick();
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var children = _react2.default.Children.toArray(this.props.children);
      var theme = this.props.theme ? 'tabs-' + this.props.theme : null;

      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('nav-tab', this.props.className) },
        _react2.default.createElement(
          'div',
          { className: (0, _classnames2.default)('nav-tabs', theme) },
          children.map(function (panel, index) {
            var ref = 'tab-menu-' + index;

            return _react2.default.createElement(
              'a',
              {
                ref: ref, key: panel.key,
                href: panel.props.href || 'javascript:;',
                onClick: _this2.handleSwitchNavTab.bind(_this2, panel, index),
                className: (0, _classnames2.default)('tabs-item', {
                  'active': _this2.state.active === index
                }) },
              panel.props.title
            );
          }),
          _react2.default.createElement(
            'div',
            { className: 'pull-right' },
            this.props.rights.map(function (c, i) {
              return _react2.default.createElement(
                'div',
                { key: i, className: 'widget-tab-item' },
                c
              );
            })
          )
        ),
        children[this.state.active] && children[this.state.active].props.href ? null : children[this.state.active]
      );
    }
  }]);

  return TabNav;
}(_react.Component), _class.Panel = (_temp2 = _class2 = function (_Component2) {
  _inherits(Panel, _Component2);

  function Panel() {
    _classCallCheck(this, Panel);

    return _possibleConstructorReturn(this, (Panel.__proto__ || Object.getPrototypeOf(Panel)).apply(this, arguments));
  }

  _createClass(Panel, [{
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'tab-content', style: { height: this.props.contentheight } },
        this.props.children
      );
    }
  }]);

  return Panel;
}(_react.Component), _class2.defaultProps = {
  title: '',
  href: null,
  handleClick: function handleClick() {},
  contentheight: 'auto'
}, _temp2), _class.defaultProps = {
  className: undefined,
  active: 0,
  children: undefined,
  theme: undefined,
  rights: []
}, _class.propTypes = {
  className: _propTypes2.default.string,
  active: _propTypes2.default.number,
  theme: _propTypes2.default.oneOf(['line', 'out']),
  rights: _propTypes2.default.array
}, _temp);
exports.default = TabNav;
module.exports = exports['default'];