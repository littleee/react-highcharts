import React, { Component } from 'react';
import cx from 'classnames';
import _ from 'lodash';
import PropTypes from 'prop-types';

export default class SearchInput extends Component {
  static defaultProps = {
    onChange: () => {},
    width: 'auto'
  };

  static propTypes = {
    onChange: PropTypes.func.isRequired,
    width: PropTypes.oneOfType([
      PropTypes.string,
      PropTypes.number
    ])
  };

  constructor (props) {
    super(props)

    this.state = {
      value: ''
    };
  }

  __ct = null;

  changeHandle({target}) {
    const value = target.value || '';

    clearTimeout(this.__ct);

    this.__ct = _.delay(() => {
      this.props.onChange(value.trim());
    }, 1000);

    this.setState({ value });
  }

  clearHandle() {
    this.props.onChange('');

    this.setState({
      value: ''
    });
  }

  render() {
    const clearable = Boolean(this.state.value);

    return (
      <div
        style={{ width: this.props.width}}
        className={cx({'form-feedback': true, 'form-clearable': Boolean(this.state.value)})}
      >
        <div className="form-feedback-icon">
          {
            clearable ? <i className="icon close" onClick={ this.clearHandle.bind(this) }>&#xe64a;</i> : null
          }
          <i className="icon">&#xe647;</i>
        </div>
        <input type="text" value={ this.state.value } className="form-control" onChange={ this.changeHandle.bind(this) } placeholder={ __('搜索') } />
      </div>
    )
  }
}
