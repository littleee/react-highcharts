'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp;

var _jquery = require('jquery');

var _jquery2 = _interopRequireDefault(_jquery);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _hashChange = require('../../decorators/hashChange');

var _hashChange2 = _interopRequireDefault(_hashChange);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var zIndex = 1000;

var Modal = (_dec = (0, _hashChange2.default)(function (dom, component) {
  if (component instanceof Modal) {
    component.close();
  }

  component.unbind();
}), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(Modal, _Component);

  _createClass(Modal, null, [{
    key: 'mount',


    /**
     * 挂载对话框
     *
     * @param  {Object} props
     * @param  {Object} parent
     * @return {Object}
     */
    value: function mount() {
      var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : document.body;

      zIndex += 1;
      var container = (0, _jquery2.default)('<div class="modal" />').get(0);

      parent.appendChild(container);

      return _reactDom2.default.render(_react2.default.createElement(this, props), container, function () {
        (0, _jquery2.default)(this.refs.dialog).after('<div class="modal-backdrop" />');

        this.__container = container;
      });
    }

    /**
     * 卸载对话框
     *
     * @param  {Object} dialog
     * @return {Undefined}
     */

  }, {
    key: 'unMount',
    value: function unMount(dialog) {
      zIndex -= 1;

      if (dialog.__container) {
        _reactDom2.default.unmountComponentAtNode(dialog.__container);

        if (dialog.__container.parentNode) {
          dialog.__container.parentNode.removeChild(dialog.__container);
        }
      }
    }
  }]);

  function Modal(props, context) {
    _classCallCheck(this, Modal);

    var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props, context));

    _this.close = _this.close.bind(_this);
    _this.state = {
      minimized: false,
      style: Object.assign({ zIndex: zIndex }, _this.props.defaultSize, _this.props.defaultPosition)
    };

    _this._startDrag = _this._startDrag.bind(_this);
    _this._dragging = _this._dragging.bind(_this);
    _this._stopDrag = _this._stopDrag.bind(_this);
    return _this;
  }

  /**
   * 卸载对话框
   *
   * @return {Undefined}
   */


  _createClass(Modal, [{
    key: 'close',
    value: function close() {
      this.constructor.unMount(this);

      var onClose = this.props.onClose;


      if (_jquery2.default.isFunction(onClose)) onClose();
    }

    /**
     * 最小化对话框
     *
     * @return {Undefined}
     */

  }, {
    key: 'minimize',
    value: function minimize() {
      var _this2 = this;

      this.setState({
        minimized: true
      }, function () {
        _this2.props.onMinimize();
      });
    }

    /**
     * 最大化对话框
     *
     * @return {Undefined}
     */

  }, {
    key: 'maximize',
    value: function maximize() {
      var _this3 = this;

      this.setState({
        minimized: false
      }, function () {
        _this3.props.onResume();
      });
    }
  }, {
    key: '_startDrag',
    value: function _startDrag(e) {
      var outOffset = this.$dialog.offsetParent().offset(),
          dialogOffset = this.$dialog.offset(),
          offset = {
        x: outOffset.left + (e.pageX - dialogOffset.left),
        y: outOffset.top + (e.pageY - dialogOffset.top)
      };

      (0, _jquery2.default)(document).on('mousemove', null, offset, this._dragging).on('mouseup', this._stopDrag);
    }
  }, {
    key: '_dragging',
    value: function _dragging(e) {
      e.stopPropagation();
      e.preventDefault();

      var position = {
        x: e.pageX - e.data.x,
        y: e.pageY - e.data.y
      };

      this.state.style.left = position.x;
      this.state.style.top = position.y;

      this.$dialog.css({
        left: position.x,
        top: position.y
      });
    }
  }, {
    key: '_stopDrag',
    value: function _stopDrag(e) {
      (0, _jquery2.default)(document).off('mousemove', this._dragging).off('mouseup', this._stopDrag);
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      var $dialog = this.$dialog = (0, _jquery2.default)(this.refs.dialog),
          $header = (0, _jquery2.default)(this.refs.header);

      if (this.props.draggable) {
        $header.on('mousedown', this._startDrag);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var $dialog = (0, _jquery2.default)(this.refs.dialog),
          $header = (0, _jquery2.default)(this.refs.header);

      if (this.props.draggable) {
        $header.off('mousedown', this._startDrag);
      }
    }
  }, {
    key: 'renderCtrls',
    value: function renderCtrls() {
      // <i className="icon" onClick={ this.minimize.bind(this) }>&#xe62d;</i> 最小化功能暂时不需要，留作备份

      return _react2.default.createElement(
        'button',
        { className: 'icon close', onClick: this.close.bind(this) },
        '\uE64A'
      );
    }
  }, {
    key: 'renderHeader',
    value: function renderHeader() {
      return _react2.default.createElement(
        'span',
        { className: 'modal-title' },
        this.props.title
      );
    }
  }, {
    key: 'renderBody',
    value: function renderBody() {
      return _react2.default.createElement(
        'div',
        null,
        '\u8BF7\u91CD\u5199 render body \u65B9\u6CD5'
      );
    }
  }, {
    key: 'renderFooter',
    value: function renderFooter() {
      // ...
    }
  }, {
    key: 'render',
    value: function render() {
      var style = this.props.draggable ? { style: { cursor: 'move' } } : null;

      return _react2.default.createElement(
        'div',
        {
          ref: 'dialog',
          className: (0, _classnames2.default)('modal-content', {
            'minimized': this.state.minimized
          }, this.props.className),
          style: this.state.style
        },
        _react2.default.createElement(
          'div',
          _extends({}, style, {
            ref: 'header',
            className: (0, _classnames2.default)('modal-header', this.props.headerClassName)
          }),
          _react2.default.createElement(
            'div',
            { className: 'pull-right' },
            this.renderCtrls()
          ),
          this.renderHeader()
        ),
        _react2.default.createElement(
          'div',
          { className: 'modal-body', ref: 'body' },
          this.props.children || this.renderBody()
        ),
        this.renderFooter()
      );
    }
  }]);

  return Modal;
}(_react.Component), _class2.defaultProps = {
  modal: true,
  title: '',
  draggable: true,
  resizable: false,
  defaultSize: {
    width: 'auto',
    height: 'auto'
  },
  defaultPosition: {
    top: 30,
    right: 30,
    bottom: 30,
    left: 30
  },
  onClose: function onClose() {},
  onResume: function onResume() {},
  onMinimize: function onMinimize() {},
  className: null,
  headerClassName: null
}, _class2.propTypes = {
  title: _propTypes2.default.any,
  modal: _propTypes2.default.bool,
  resizable: _propTypes2.default.bool,
  defaultSize: _propTypes2.default.object,
  defaultPosition: _propTypes2.default.object,
  onClose: _propTypes2.default.func,
  onResume: _propTypes2.default.func,
  onMinimize: _propTypes2.default.func
}, _temp)) || _class);
exports.default = Modal;
module.exports = exports['default'];