import React from 'react';
import Page from '../components/page/index.jsx';
import { Select } from '../../build/components';
import ParamTable from '../components/param-table/index.jsx';

const options = [{
        label: 1,
        value: 1
      }, {
        label: 2,
        value: 2
      }, {
        label: 3,
        value: 3
      }, {
        label: 4,
        value: 4
      }, {
        label: 5,
        value: 5
      }, {
        label: 6,
        value: 6
      }],

      value = {
        label: 1,
        value: 1
      };

class SelectExamples extends React.Component {
  parameters = [{
    name: 'value',
    type: 'Any',
    allow: '--',
    defaults: <code>undefined</code>,
    remark: '默认值'
  }, {
    name: 'multi',
    type: 'Boolean',
    allow: '--',
    defaults: <code>false</code>,
    remark: '是否多选'
  }, {
    name: 'disabled',
    type: 'Boolean',
    allow: '--',
    defaults: <code>false</code>,
    remark: '是否被禁用'
  }, {
    name: 'options',
    type: 'Array',
    allow: '--',
    defaults: <code>undefined</code>,
    remark: '选项'
  }, {
    name: 'delimiter',
    type: 'String',
    allow: '--',
    defaults: <code>','</code>,
    remark: '连接符'
  }, {
    name: 'asyncOptions',
    type: 'Function',
    allow: '--',
    defaults: <code>undefined</code>,
    remark: '异步获取选项的方法'
  }, {
    name: 'autoload',
    type: 'Boolean',
    allow: '--',
    defaults: <code>true</code>,
    remark: '是否自动获取选项，配合 asyncOptions 使用'
  }, {
    name: 'placeholder',
    type: 'String',
    allow: '--',
    defaults: <code>Select...</code>,
    remark: '提示文本'
  }, {
    name: 'noResultsText',
    type: 'String',
    allow: '--',
    defaults: <code>No results found</code>,
    remark: '无数据消息提示'
  }, {
    name: 'clearable',
    type: 'Boolean',
    allow: '--',
    defaults: <code>true</code>,
    remark: '是否可清除'
  }, {
    name: 'clearValueText',
    type: 'String',
    allow: '--',
    defaults: <code>Clear value</code>,
    remark: '清除按钮标题'
  }, {
    name: 'clearAllText',
    type: 'String',
    allow: '--',
    defaults: <code>Clear all</code>,
    remark: '清除按钮标题（多选）'
  }, {
    name: 'searchable',
    type: 'Boolean',
    allow: '--',
    defaults: <code>true</code>,
    remark: '是否可搜索'
  }, {
    name: 'name',
    type: 'String',
    allow: '--',
    defaults: <code>undefined</code>,
    remark: '表单字段名称'
  }, {
    name: 'onChange',
    type: 'Function',
    allow: '--',
    defaults: <code>undefined</code>,
    remark: '筛选时触发的回调'
  }, {
    name: 'onFocus',
    type: 'Function',
    allow: '--',
    defaults: <code>undefined</code>,
    remark: '获取焦点时触发的回调'
  }, {
    name: 'onBlur',
    type: 'Function',
    allow: '--',
    defaults: <code>undefined</code>,
    remark: '失去焦点时触发的回调'
  }, {
    name: 'className',
    type: 'String',
    allow: '--',
    defaults: <code>undefined</code>,
    remark: '样式类'
  }, {
    name: 'filterOption',
    type: 'Function',
    allow: '--',
    defaults: <code>undefined</code>,
    remark: '自定义筛选规则（单选）'
  }, {
    name: 'filterOptions',
    type: 'Function',
    allow: '--',
    defaults: <code>undefined</code>,
    remark: '自定义筛选规则（多选）'
  }, {
    name: 'inputProps',
    type: 'Object',
    allow: '--',
    defaults: <code>{}</code>,
    remark: '自定义属性'
  }];

  render() {
    return (
      <Page alias="选择器">
        <div className="section">
          <h3>动态示例</h3>
          <div className="example-area">
            <p>单选</p>
            <Select options={ options } value={ value } />
          </div>
          <div className="source-code-area">
            <pre><code>
{`<Select options={ options } value={ value } />`}
            </code></pre>
          </div>

          <div className="example-area">
            <p>多选</p>
            <Select options={ options } value={ value } multi />
          </div>
          <div className="source-code-area">
            <pre><code>
{`<Select options={ options } value={ value } multi />`}
            </code></pre>
          </div>

          <div className="example-area">
            <p>禁用</p>
            <Select options={ options } value={ value } disabled />
            <Select options={ options } value={ value } multi disabled />
          </div>
          <div className="source-code-area">
            <pre><code>
{`<Select options={ options } value={ value } disabled />
<Select options={ options } value={ value } multi disabled />`}
            </code></pre>
          </div>
        </div>

        <div className="section">
          <h3>参数列表</h3>
          <div className="example-area">
            <ParamTable data={ this.parameters } />
          </div>
        </div>
      </Page>
    );
  }
}

export default SelectExamples;
