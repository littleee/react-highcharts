'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dec, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _clickOutside = require('../../decorators/clickOutside');

var _clickOutside2 = _interopRequireDefault(_clickOutside);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Dropdown = (_dec = (0, _clickOutside2.default)(function (component) {
  component.setState({
    isActive: false
  });
}), _dec(_class = (_temp = _class2 = function (_Component) {
  _inherits(Dropdown, _Component);

  function Dropdown(props) {
    _classCallCheck(this, Dropdown);

    var _this = _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call(this, props));

    _this.state = {
      isActive: false
    };
    return _this;
  }

  _createClass(Dropdown, [{
    key: 'toggle',
    value: function toggle() {
      this.setState({
        isActive: !this.state.isActive
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      if (nextProps.autoHide) {
        this.setState({
          isActive: false
        });
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var labelClassName = function () {
        var obj = {};

        if (_this2.props.labelClassName) {
          obj[_this2.props.labelClassName] = true;
        }

        return obj;
      }();

      // 对齐方式（左 / 右）
      var pullRight = this.props.pullRight ? { 'dropdown-menu-right': this.props.pullRight } : null;

      return _react2.default.createElement(
        'div',
        { className: (0, _classnames2.default)('dropdown', this.props.className, { 'open': this.state.isActive }), style: this.props.style },
        _react2.default.createElement(
          'div',
          { className: (0, _classnames2.default)('btn dropdown-toggle', labelClassName, pullRight), onClick: this.toggle.bind(this) },
          this.props.icon ? _react2.default.createElement(
            'span',
            { className: 'caret icon' },
            '\uE64B'
          ) : null,
          this.props.label
        ),
        this.state.isActive ? _react2.default.createElement(
          'div',
          { className: (0, _classnames2.default)('dropdown-menu', pullRight), style: this.props.menuStyle },
          this.props.children
        ) : null
      );
    }
  }]);

  return Dropdown;
}(_react.Component), _class2.defaultProps = {
  autoHide: false,
  labelClassName: undefined,
  label: undefined,
  pullRight: false,
  menuStyle: {},
  style: null,
  icon: true
}, _class2.propTypes = {
  autoHide: _propTypes2.default.bool,
  labelClassName: _propTypes2.default.any,
  label: _propTypes2.default.any,
  pullRight: _propTypes2.default.bool,
  menuStyle: _propTypes2.default.object,
  style: _propTypes2.default.object,
  icon: _propTypes2.default.bool
}, _temp)) || _class);
exports.default = Dropdown;
module.exports = exports['default'];