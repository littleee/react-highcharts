'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SearchInput = (_temp = _class = function (_Component) {
  _inherits(SearchInput, _Component);

  function SearchInput(props) {
    _classCallCheck(this, SearchInput);

    var _this = _possibleConstructorReturn(this, (SearchInput.__proto__ || Object.getPrototypeOf(SearchInput)).call(this, props));

    _this.__ct = null;


    _this.state = {
      value: ''
    };
    return _this;
  }

  _createClass(SearchInput, [{
    key: 'changeHandle',
    value: function changeHandle(_ref) {
      var _this2 = this;

      var target = _ref.target;

      var value = target.value || '';

      clearTimeout(this.__ct);

      this.__ct = _lodash2.default.delay(function () {
        _this2.props.onChange(value.trim());
      }, 1000);

      this.setState({ value: value });
    }
  }, {
    key: 'clearHandle',
    value: function clearHandle() {
      this.props.onChange('');

      this.setState({
        value: ''
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var clearable = Boolean(this.state.value);

      return _react2.default.createElement(
        'div',
        {
          style: { width: this.props.width },
          className: (0, _classnames2.default)({ 'form-feedback': true, 'form-clearable': Boolean(this.state.value) })
        },
        _react2.default.createElement(
          'div',
          { className: 'form-feedback-icon' },
          clearable ? _react2.default.createElement(
            'i',
            { className: 'icon close', onClick: this.clearHandle.bind(this) },
            '\uE64A'
          ) : null,
          _react2.default.createElement(
            'i',
            { className: 'icon' },
            '\uE647'
          )
        ),
        _react2.default.createElement('input', { type: 'text', value: this.state.value, className: 'form-control', onChange: this.changeHandle.bind(this), placeholder: __('搜索') })
      );
    }
  }]);

  return SearchInput;
}(_react.Component), _class.defaultProps = {
  onChange: function onChange() {},
  width: 'auto'
}, _class.propTypes = {
  onChange: _propTypes2.default.func.isRequired,
  width: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
}, _temp);
exports.default = SearchInput;
module.exports = exports['default'];