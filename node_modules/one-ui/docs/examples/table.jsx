import React from 'react';
import Page from '../components/page/index.jsx';
import Table from 'table';
import { peoples, columns } from '../../config/example.js';
import ParamTable from '../components/param-table/index.jsx';

class TableExamples extends React.Component {
  parameters = [{
    name: 'defaultSortKey',
    type: 'String',
    isRequired: false,
    defaults: <code>undefined</code>,
    remark: '默认排序键'
  }, {
    name: 'data',
    type: 'Array',
    isRequired: true,
    defaults: <code>[]</code>,
    remark: '数据集合'
  }, {
    name: 'showCols',
    type: 'Boolean',
    defaults: <code>true</code>,
    remark: '是否显示表头'
  }, {
    name: 'className',
    type: 'Any',
    defaults: <code>null</code>,
    remark: '表格样式类'
  }, {
    name: 'tbodyClassName',
    type: 'String',
    defaults: <code>null</code>,
    remark: '表格内容区域样式类'
  }, {
    name: 'columns',
    type: 'Array',
    defaults: <code>[]</code>,
    remark: '表头'
  }, {
    name: <span><code>columns</code> columns.title</span>,
    type: 'String',
    defaults: <code>undefined</code>,
    remark: '列名称'
  }, {
    name: <span><code>columns</code> columns.key</span>,
    type: 'String | Number',
    defaults: <code>undefined</code>,
    remark: '列对应的键'
  }, {
    name: <span><code>columns</code> columns.width</span>,
    type: 'String | Number',
    defaults: <code>undefined</code>,
    remark: <span title="列宽（当设为可缩放宽度时，宽度不能设置为百分比）">列宽（当设为可缩放宽度时，宽度不能设置为百分比）</span>
  }, {
    name: <span><code>columns</code> columns.sortable</span>,
    type: 'Boolean',
    defaults: <code>undefined</code>,
    remark: '指定该列是否可排序'
  }, {
    name: <span><code>columns</code> columns.sortfetch</span>,
    type: 'Boolean',
    defaults: <code>undefined</code>,
    remark: '指定该列是否可排序'
  }, {
    name: <span><code>columns</code> columns.template</span>,
    type: 'String',
    defaults: <code>undefined</code>,
    remark: '模板'
  }, {
    name: <span><code>columns</code> columns.format</span>,
    type: 'Function',
    defaults: <code>undefined</code>,
    remark: '自定义格式化规则'
  }, {
    name: <span><code>columns</code> columns.render</span>,
    type: 'Function',
    defaults: <code>undefined</code>,
    remark: '自定义数据输出'
  }, {
    name: <span><code>columns</code> columns.scaleable</span>,
    type: 'Boolean',
    defaults: <code>true</code>,
    remark: '是否允许表头列拖拽改变列宽'
  }, {
    name: <span><code>columns</code> columns.ellipsis</span>,
    type: 'Boolean',
    defaults: <code>undefined</code>,
    remark: '是否需要文本溢出后显示省略号的效果'
  }, {
    name: 'sortKey',
    type: 'String',
    defaults: <code>null</code>,
    remark: '排序键'
  }, {
    name: 'filterFn',
    type: 'Function',
    defaults: <code>(row) => true</code>,
    remark: '自定义排序规则'
  }, {
    name: 'isSelected',
    type: 'Boolean',
    defaults: <code>false</code>,
    remark: '是否多选'
  }, {
    name: 'getSelections',
    type: 'Function',
    defaults: <code>(v) => v</code>,
    remark: '获取已选中的数据行'
  }, {
    name: 'isRadio',
    type: 'Boolean',
    defaults: <code>true</code>,
    remark: '是否单选'
  }, {
    name: 'selectedRows',
    type: 'Array',
    defaults: <code>[]</code>,
    remark: '选中的行'
  }, {
    name: 'sortFetchKey',
    type: 'Array',
    defaults: <code>null</code>,
    remark: '----'
  }, {
    name: 'getSortKey',
    type: 'Function',
    defaults: <code>(v) => v</code>,
    remark: '获取排序的 key 值'
  }];

  state = {
    keywords: ''
  };

  handleFilterUsername(row) {
    if (this.state.keywords.length === 0) return true;

    return row.username.indexOf(this.state.keywords) !== -1;
  }

  handleUpdateKeywords({target}) {
    return this.setState({
      keywords: target.value.trim()
    });
  }

  render() {
    return (
      <Page alias="表格">
        <div className="section">
          <h3>基本实例</h3>
          <p>为任意 table 标签添加 .table 类可以为其赋予基本的样式 — 少量的内补（padding）和水平方向的分隔线。这种方式看起来很多余！？但是我们觉得，表格元素使用的很广泛，如果我们为其赋予默认样式可能会影响例如日历和日期选择之类的插件，所以我们选择将此样式独立出来。</p>
          <div className="example-area">
            <table className="table">
              <thead>
                <tr>
                  <th>#</th>
                  <th>First Name</th>
                  <th>Last Name</th>
                  <th>Username</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <th scope="row">1</th>
                  <td>Mark</td>
                  <td>Otto</td>
                  <td>@mdo</td>
                </tr>
                <tr>
                  <th scope="row">2</th>
                  <td>Jacob</td>
                  <td>Thornton</td>
                  <td>@fat</td>
                </tr>
                <tr>
                  <th scope="row">3</th>
                  <td>Larry</td>
                  <td>the Bird</td>
                  <td>@twitter</td>
                </tr>
              </tbody>
            </table>
          </div>

          <div className="source-code-area">
            <pre><code>
{`<table>
  ....
</table>`}
            </code></pre>
          </div>
        </div>

        <div className="section">
          <h3>条纹状表格</h3>
          <p>通过 .table-striped 类可以给 tbody 之内的每一行增加斑马条纹样式。</p>
          <div className="example-area">
            <table className="table table-striped">
              <thead>
                <tr>
                  <th>#</th>
                  <th>First Name</th>
                  <th>Last Name</th>
                  <th>Username</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>1</td>
                  <td>Mark</td>
                  <td>Otto</td>
                  <td>@mdo</td>
                </tr>
                <tr>
                  <td>2</td>
                  <td>Jacob</td>
                  <td>Thornton</td>
                  <td>@fat</td>
                </tr>
                <tr>
                  <td>3</td>
                  <td>Larry</td>
                  <td>the Bird</td>
                  <td>@twitter</td>
                </tr>
              </tbody>
            </table>
          </div>
          <div className="source-code-area">
            <pre>
              <code>
{`<table class="table table-striped">
  ...
</table>`}
              </code>
            </pre>
          </div>
        </div>

        <div className="section">
          <h3>鼠标悬停</h3>
          <p>通过添加 .table-hover 类可以让 tbody 中的每一行对鼠标悬停状态作出响应。</p>
          <div className="example-area">
            <table className="table table-hover">
              <thead>
                <tr>
                  <th>#</th>
                  <th>First Name</th>
                  <th>Last Name</th>
                  <th>Username</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td>1</td>
                  <td>Mark</td>
                  <td>Otto</td>
                  <td>@mdo</td>
                </tr>
                <tr>
                  <td>2</td>
                  <td>Jacob</td>
                  <td>Thornton</td>
                  <td>@fat</td>
                </tr>
                <tr>
                  <td>3</td>
                  <td>Larry</td>
                  <td>the Bird</td>
                  <td>@twitter</td>
                </tr>
              </tbody>
            </table>
          </div>
          <div className="source-code-area">
            <pre>
              <code>
{`<table class="table table-hover">
  ...
</table>`}
              </code>
            </pre>
          </div>
        </div>

        <div className="section">
          <h3>工具栏 - 文本 + 图标</h3>
          <p>在实际项目中肯定会有表头工具栏这样的需求，别担心，我们已经为了提供了这样的样式，你需要拷贝代码即可。以下是带文本和图标的工具栏，其中 .table-tools, .tool-item, .tool-icon 是基本的样式类），如果你只想使用带图标和文本的工具栏，记得在 .table-tools 元素上添加 .tool-icon-text 样式类。除此之外，还需要在文本所在的标签上添加 .table-name 样式类。</p>
          <p>DOM 结构：.table-tools.tool-icon-text>(span.tool-item>(i.icon.tool-icon+strong.tool-name))</p>
          <div className="example-area">
            <div className="table-tools tool-icon-text">
              <div className="pull-right">
                <span className="tool-item page-info">显示 20 of 20</span>
                <a className="tool-item show-more" href="javascript:;">显示全部</a>
                <div className="tool-item">
                  <div className="form-feedback">
                    <input type="text" className="form-control" />
                    <i className="icon form-feedback-icon">&#xe647;</i>
                  </div>
                </div>
              </div>

              <span className="tool-item">
                <i className="tool-icon icon">&#xe655;</i>
                <strong className="tool-name">筛选</strong>
              </span>
              <span className="tool-item">
                <i className="tool-icon icon">&#xe655;</i>
                <strong className="tool-name">筛选</strong>
              </span>
              <span className="tool-item">
                <i className="tool-icon icon">&#xe655;</i>
                <strong className="tool-name">筛选</strong>
              </span>
            </div>

            <div className="table-header">
              <table className="table table-fixed">
                <thead>
                  <tr>
                    <th>
                      <div className="sortable">
                        username <span className="sort-icon icon">&#xe656;</span>
                      </div>
                    </th>
                    <th>email</th>
                    <th>company</th>
                    <th>action</th>
                  </tr>
                </thead>
              </table>
            </div>
          </div>

          <div className="source-code-area">
            <pre><code>
{`<div className="table-tools tool-icon-text">
  <div className="pull-right">
    <span className="tool-item page-info">显示 20 of 20</span>
    <a className="tool-item show-more" href="javascript:;">显示全部</a>
    <div className="tool-item">
      <div className="form-feedback">
        <input type="text" className="form-control" />
        <i className="icon form-feedback-icon">&#xe647;</i>
      </div>
    </div>
  </div>

  <span className="tool-item">
    <i className="tool-icon icon">&#xe655;</i>
    <strong className="tool-name">筛选</strong>
  </span>
  <span className="tool-item">
    <i className="tool-icon icon">&#xe655;</i>
    <strong className="tool-name">筛选</strong>
  </span>
  <span className="tool-item">
    <i className="tool-icon icon">&#xe655;</i>
    <strong className="tool-name">筛选</strong>
  </span>
</div>`}
            </code></pre>
          </div>
        </div>

        <div className="section">
          <h3>工具栏 - 图标分组</h3>
          <p>又或者你是想要图标分组的效果，so easy，只需要加一个 .tool-item-group DOM 节点即可。</p>
          <p>DOM 结构：.table-tools>.tool-item-group>span.tool-item.only-icon>i.icon.tool-icon</p>
          <div className="example-area">
            <div className="table-tools tool-only-icon">
              <div className="pull-right">
                <span className="tool-item page-info">显示 20 of 20</span>
                <a className="tool-item show-more" href="javascript:;">显示全部</a>
                <div className="tool-item">
                  <div className="form-feedback">
                    <input type="text" className="form-control" />
                    <i className="icon form-feedback-icon">&#xe647;</i>
                  </div>
                </div>
              </div>
              <div className="tool-item-group">
                <span className="tool-item only-icon">
                  <i className="icon">&#xe67c;</i>
                </span>
                <span className="tool-item only-icon">
                  <i className="icon">&#xe613;</i>
                </span>
                <span className="tool-item only-icon">
                  <i className="icon">&#xe628;</i>
                </span>
                <span className="tool-item only-icon active">
                  <i className="icon">&#xe65a;</i>
                </span>
              </div>
            </div>

            <div className="table-header">
              <table className="table table-fixed">
                <thead>
                  <tr>
                    <th>
                      <div className="sortable">username <span className="sort-icon icon">&#xe656;</span></div>
                    </th>
                    <th>email</th>
                    <th>company</th>
                    <th>action</th>
                  </tr>
                </thead>
              </table>
            </div>
          </div>

          <div className="source-code-area">
            <pre><code>
{`<div className="table-tools tool-only-icon">
  <div className="pull-right">
    <span className="tool-item page-info">显示 20 of 20</span>
    <a className="tool-item show-more" href="javascript:;">显示全部</a>
    <div className="tool-item">
      <div className="form-feedback">
        <input type="text" className="form-control" />
        <i className="icon form-feedback-icon">&#xe647;</i>
      </div>
    </div>
  </div>
  <div className="tool-item-group">
    <span className="tool-item only-icon">
      <i className="icon">&#xe67c;</i>
    </span>
    <span className="tool-item only-icon">
      <i className="icon">&#xe613;</i>
    </span>
    <span className="tool-item only-icon">
      <i className="icon">&#xe628;</i>
    </span>
    <span className="tool-item only-icon active">
      <i className="icon">&#xe65a;</i>
    </span>
  </div>
</div>`}
            </code></pre>
          </div>
        </div>

        <div className="section">
          <h3>小尺寸工具栏 - 仅图标</h3>
          <p>除了上面那两种效果外，我们还提供了小尺寸的工具栏。注意：小尺寸工具栏的高度为 35px，其余两种的高度为 45px，并且不能包含有上面演示的那两种元素；</p>
          <p>DOM 结构：.table-tools>.tool-icon-wrapper>span.tool-item.only-icon>i.icon.tool-icon</p>
          <div className="example-area">
            <div className="table-tools tool-icon-mini">
              <div className="pull-right">
                <span className="tool-item page-info">显示 20 of 20</span>
                <a className="tool-item show-more" href="javascript:;">显示全部</a>
                <div className="tool-item">
                  <div className="form-feedback">
                    <input type="text" className="form-control input-xs" />
                    <i className="icon form-feedback-icon">&#xe647;</i>
                  </div>
                </div>
              </div>
              <div className="tool-icon-wrapper" data-place="right" data-tip="添加">
                <span className="tool-item only-icon">
                  <i className="icon">&#xe62c;</i>
                </span>
              </div>
              <div className="tool-icon-wrapper" data-place="right" data-tip="删除">
                <span className="tool-item only-icon">
                  <i className="icon">&#xe62d;</i>
                </span>
              </div>
            </div>
            <div className="table-header">
              <table className="table table-fixed">
                <thead>
                  <tr>
                    <th>
                      <div className="sortable">username <span className="sort-icon icon">&#xe656;</span></div>
                    </th>
                    <th>email</th>
                    <th>company</th>
                    <th>action</th>
                  </tr>
                </thead>
              </table>
            </div>
          </div>

          <div className="source-code-area">
            <pre><code>
{`<div className="table-tools tool-icon-mini">
  <div className="pull-right">
    <span className="tool-item page-info">显示 20 of 20</span>
    <a className="tool-item show-more" href="javascript:;">显示全部</a>
    <div className="tool-item">
      <div className="form-feedback">
        <input type="text" className="form-control input-xs" />
        <i className="icon form-feedback-icon">&#xe647;</i>
      </div>
    </div>
  </div>
  <div className="tool-icon-wrapper" data-place="right" data-tip="添加">
    <span className="tool-item only-icon">
      <i className="icon">&#xe62c;</i>
    </span>
  </div>
  <div className="tool-icon-wrapper" data-place="right" data-tip="删除">
    <span className="tool-item only-icon">
      <i className="icon">&#xe62d;</i>
    </span>
  </div>
</div>`}
            </code></pre>
          </div>
        </div>

        <div className="section">
          <h3>动态演示（拖拽改变大小，最后一列不可拖拽）</h3>
          <div className="example-area">
            <div className="table-tools tool-only-icon">
              <div className="pull-right">
                <div className="tool-item">
                  <div className="form-feedback">
                    <input type="text" className="form-control" onChange={ this.handleUpdateKeywords.bind(this) } />
                    <i className="icon form-feedback-icon">&#xe647;</i>
                  </div>
                </div>
              </div>
              <div className="tool-item-group">
                <span className="tool-item only-icon">
                  <i className="icon">&#xe67c;</i>
                </span>
                <span className="tool-item only-icon">
                  <i className="icon">&#xe613;</i>
                </span>
                <span className="tool-item only-icon">
                  <i className="icon">&#xe628;</i>
                </span>
                <span className="tool-item only-icon active">
                  <i className="icon">&#xe65a;</i>
                </span>
              </div>
            </div>
            <Table data={ peoples } columns={ columns } filterFn={ this.handleFilterUsername.bind(this) } />
          </div>
        </div>

        <div className="section">
          <h3>参数列表</h3>
          <div className="example-area">
            <ParamTable data={ this.parameters } defaultSortKey="name" isSelected={true} />
          </div>
        </div>
      </Page>
    );
  }
}

export default TableExamples;
